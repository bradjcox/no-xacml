<project default="build" basedir=".">

  <property file="build.properties" />
  <property file="security.properties" />

  <path id="opensaml-path" >
    <fileset dir="lib" >
      <include name="*.jar" />
      <exclude name="slf4j-jdk14-1.5.6.jar" />
        <!-- exclude in slf4j-nop-1.5.6.jar instead, to see full logging -->
    </fileset>
  </path>
  
  <path id="compile-path.post-include" >
    <path refid="opensaml-path" />
  </path>
  <path id="launch-path.post-include" >
    <path refid="opensaml-path" />
  </path>

  <path id="compile-path" >
    <pathelement path="${src}"/>
    <path refid="compile-path.post-include" />
  </path>
  <target name="echo-compile-path" >
    <pathconvert
      refid="compile-path"
      property="compile-path.string"
      dirsep="/"
      pathsep="    "
    />
    <echo message="${compile-path.string}" />
  </target>
  
  <path id="launch-path" >
    <pathelement path="${build}/classes"/>
    <path refid="launch-path.post-include" />
  </path>
  <target name="echo-launch-path" >
    <pathconvert
      refid="launch-path"
      property="launch-path.string"
      dirsep="/"
      pathsep="    "
    />
    <echo message="${launch-path.string}" />
  </target>
  
  <target name="clean" >
    <delete dir="${build}" />
  </target>

  <target name="prepare" depends="clean" >
    <mkdir dir="${build}/classes" />
  </target>

  <target name="compile" depends="prepare" >
    <echo message="javac -d ${build}/classes ${src}" />
    <echo message="  (ant echo-compile-path to see full classpath)" />
    <javac 
      srcdir="${src}" 
      includes="**/*.java" 
      destdir="${build}/classes" 
      debug="true" 
    >
      <classpath>
        <path refid="compile-path" />
      </classpath>
      <!--compilerarg value="-Xlint:unchecked" /-->
    </javac>
  </target>

  <target name="run" >
    <echo message="java ${app-class} ${args}" />
    <echo message="  (ant echo-launch-path to see full classpath)" />
    <java fork="on" classname="${app-class}" >
      <classpath>
        <path refid="launch-path" />
      </classpath>
      <arg line="${args}" />
    </java>
  </target>
  
  <target name="run-endorsed" >
    <echo message="java ${app-class} ${args}" />
    <echo message="  (ant echo-launch-path to see full classpath)" />
    <java fork="on" classname="${app-class}" >
      <classpath>
        <path refid="launch-path" />
      </classpath>
      <arg line="${args}" />
      <sysproperty 
        key="java.endorsed.dirs" 
        value="endorsed" 
      />
    </java>
  </target>
  
  <target name="delete-keystore" >
    <delete file="${keystore-path}/${keystore}" />
  </target>
  
  <target name="build-keystore" >
    <echo message='keytool -genkey -dname "cn=CC Student" -keystore ${keystore-path}/${keystore} -storepass ${storepass} -alias ${alias} -keypass ${keypass}' />
    <genkey
      dname="cn=CC Student"
      keystore="${keystore-path}/${keystore}"
      storepass="${storepass}"
      alias="${alias}"
      keypass="${keypass}"
      keyalg="${keyalg}"
      keysize="${keysize}"
    />
  </target>
  
  <target name="add-security-config" depends="prepare" >
    <copy todir="${build}/classes/${sec-config-target}" >
      <fileset dir="." includes="security.properties" />
      <fileset dir="${keystore-path}" includes="${keystore}" />
    </copy>
  </target>

  <target name="build" depends="compile,add-security-config" />
  
</project>

